<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
    
    <!-- Party Qualification -->
    <simple-method method-name="createPartyQualType" short-description="Create a Party Qualification Type">
        <make-value entity-name="PartyQualType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <!-- <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty> -->
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <!-- <field-to-result field="newEntity.partyId" result-name="partyId"/>
        <field-to-result field="newEntity.partyQualTypeId" result-name="partyQualTypeId"/>
        <field-to-result field="newEntity.fromDate" result-name="fromDate"/> -->
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="createPartyQual" short-description="Create a Party Qualification">
        <make-value entity-name="PartyQual" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <field-to-result field="newEntity.partyId" result-name="partyId"/>
        <field-to-result field="newEntity.partyQualTypeId" result-name="partyQualTypeId"/>
        <field-to-result field="newEntity.fromDate" result-name="fromDate"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <!-- Ability Group -->
     <simple-method method-name="updatePartyQual" short-description="Update Qualification of a Party">
        <entity-one entity-name="PartyQual" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Employee Educational Qualification Successfully Updated"/>
    </simple-method>

    <simple-method method-name="deletePartyQual" short-description="Delete Qualification of a Party">
        <entity-one entity-name="PartyQual" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Employee Educational Qualification Successfully Deleted"/>
    </simple-method>
 <simple-method method-name="deleteEmplResponsibility" short-description="Delete Responsibility of a Party">
        <entity-one entity-name="ContessaEmplResponsibility" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

	<!-- ===============Professional Qualification==================== -->
	
   <simple-method method-name="updateProfQual" short-description="Update Professional Qualification of a Party">
        <entity-one entity-name="ProfQual" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Employee Professional Qualification Successfully Updated"/>
    </simple-method>

    <simple-method method-name="deleteProfQual" short-description="Delete Professional Qualification of a Party">
        <entity-one entity-name="ProfQual" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Employee Professional Qualification Successfully Deleted"/>
    </simple-method>
	<!-- ============================================================================== -->
    <simple-method method-name="createPartyResume" short-description="Create Resume for Party">
        <make-value entity-name="PartyResume" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="PartyResume" field="newEntity.resumeId"/>
        <field-to-result field="resumeId" result-name="newEntity.resumeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePartyResume" short-description="Update a Resume of a Party">
        <entity-one entity-name="PartyResume" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePartyResume" short-description="Delete a Resume of a Party">
        <entity-one entity-name="PartyResume" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPartySkill" short-description="Create Party Skills">
        <make-value entity-name="PartySkill" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <entity-one entity-name="PartySkill" value-field="partySkill" auto-field-map="true"/>
        <if>
            <condition>
                <and>
                   <if-compare-field field="partySkill.partyId" to-field="parameters.partyId" operator="equals"/>
                   <if-compare-field field="partySkill.skillTypeId" to-field="parameters.skillTypeId" operator="equals"/>
                </and>
            </condition>
            <then>
                 <add-error>
                    <fail-property resource="HumanResUiLabels" property="HumanResPartySkillsAlreadyExists"/>
                 </add-error>
                 <check-errors/>
            </then>
            <else>
                <create-value value-field="newEntity"/>
            </else>
        </if>
    </simple-method>

    <simple-method method-name="updatePartySkill" short-description="Update Party Skills">
        <entity-one entity-name="PartySkill" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePartySkill" short-description="Delete a Skill of Party">
        <entity-one entity-name="PartySkill" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPerfReview" short-description="Create a Performance Review">
        <make-value entity-name="PerfReview" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="PerfReview" field="newEntity.perfReviewId"/>
        <create-value value-field="newEntity"/>
        <field-to-result field="newEntity.perfReviewId" result-name="perfReviewId"/>
        <field-to-result field="newEntity.employeePartyId" result-name="employeePartyId"/>
        <field-to-result field="newEntity.employeeRoleTypeId" result-name="employeeRoleTypeId"/>
    </simple-method>

    <simple-method method-name="updatePerfReview" short-description="Update Performance Review">
        <entity-one entity-name="PerfReview" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <field-to-result field="lookedUpValue.perfReviewId" result-name="perfReviewId"/>
        <field-to-result field="lookedUpValue.employeePartyId" result-name="employeePartyId"/>
        <field-to-result field="lookedUpValue.employeeRoleTypeId" result-name="employeeRoleTypeId"/>
    </simple-method>

    <simple-method method-name="deletePerfReview" short-description="Delete Performance Review">
        <entity-one entity-name="PerfReview" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPerfReviewItem" short-description="Create Performance Review Items">
        <make-value entity-name="PerfReviewItem" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <make-next-seq-id value-field="newEntity" seq-field-name="perfReviewItemSeqId"/>
        <field-to-result field="perfReviewItemSeqId" result-name="perfReviewItemSeqId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePerfReviewItem" short-description="Update Performance Review Items">
        <entity-one entity-name="PerfReviewItem" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePerfReviewItem" short-description="Delete Performance Review Items">
        <entity-one entity-name="PerfReviewItem" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPerformanceNote" short-description="Create Performance Note">
        <make-value entity-name="PerformanceNote" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePerformanceNote" short-description="Update Performance Note">
        <entity-one entity-name="PerformanceNote" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePerformanceNote" short-description="Delete Performance Note">
        <entity-one entity-name="PerformanceNote" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <!-- Employment Group -->
    <simple-method method-name="createEmployment" short-description="Create Employment">
        <make-value entity-name="Employment" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>

        <set-service-fields service-name="createPayHistory" map="newEntity" to-map="createPayHistoryMap"/>
        <call-service service-name="createPayHistory" in-map-name="createPayHistoryMap"/>
    </simple-method>

    <simple-method method-name="updateEmployment" short-description="Update Employment">
        <entity-one entity-name="Employment" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmployment" short-description="Delete Employment">
        <entity-one entity-name="Employment" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createEmploymentApp" short-description="Create an Employment Application">
        <make-value entity-name="EmploymentApp" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="EmploymentApp" field="newEntity.applicationId"/>
        <field-to-result field="newEntity.applicationId" result-name="applicationId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateEmploymentApp" short-description="Update EmploymentApp">
        <entity-one entity-name="EmploymentApp" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmploymentApp" short-description="Delete EmploymentApp">
        <entity-one entity-name="EmploymentApp" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPartyBenefit" short-description="Create Party Benefit">
        <make-value entity-name="PartyBenefit" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePartyBenefit" short-description="Update Party Benefit">
        <entity-one entity-name="PartyBenefit" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePartyBenefit" short-description="Delete Party Benefit">
        <now-timestamp field="nowTimeStamp"/>
        <entity-one entity-name="PartyBenefit" value-field="lookedUpValue"/>
        <set field="lookedUpValue.thruDate" from-field="nowTimeStamp"/>
        <store-value value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPayGrade" short-description="Create a Pay Grade">
        <make-value entity-name="PayGrade" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-not-empty field="parameters.payGradeId">
            <set field="newEntity.payGradeId" from-field="parameters.payGradeId"/>
        <else>
            <sequenced-id sequence-name="PayGrade" field="newEntity.payGradeId"/>
        </else>
        </if-not-empty>
        <field-to-result field="newEntity.payGradeId" result-name="payGradeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePayGrade" short-description="Update Pay Grade">
        <entity-one entity-name="PayGrade" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePayGrade" short-description="Delete Pay Grade">
        <entity-one entity-name="PayGrade" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPayHistory" short-description="Create Pay History">
        <make-value entity-name="PayHistory" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePayHistory" short-description="Update Pay History">
        <entity-one entity-name="PayHistory" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePayHistory" short-description="Delete Pay History">
        <now-timestamp field="nowTimeStamp"/>
        <entity-one entity-name="PayHistory" value-field="lookedUpValue"/>
        <set field="lookedUpValue.thruDate" from-field="nowTimeStamp"/>
        <store-value value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createPayrollPreference" short-description="Create a Payroll Preference">
        <make-value entity-name="PayrollPreference" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="PayrollPreference" field="newEntity.payrollPreferenceSeqId"/>
        <field-to-result field="payrollPreferenceSeqId" result-name="payrollPreferenceSeqId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updatePayrollPreference" short-description="Update Payroll Preference">
        <entity-one entity-name="PayrollPreference" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deletePayrollPreference" short-description="Delete Payroll Preference">
        <entity-one entity-name="PayrollPreference" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createSalaryStep" short-description="Create a Salary Step">
        <make-value entity-name="SalaryStep" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="SalaryStep" field="newEntity.salaryStepSeqId"/>
        <field-to-result field="salaryStepSeqId" result-name="salaryStepSeqId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateSalaryStep" short-description="Update Salary Step">
        <entity-one entity-name="SalaryStep" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteSalaryStep" short-description="Delete Salary Step">
        <entity-one entity-name="SalaryStep" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createTerminationReason" short-description="Create a Termination Reason">
        <make-value entity-name="TerminationReason" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.terminationReasonId">
            <sequenced-id sequence-name="TerminationReason" field="newEntity.terminationReasonId"/>
        </if-empty>
        <field-to-result field="newEntity.terminationReasonId" result-name="terminationReasonId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
     <simple-method method-name="createPayrollLevel" short-description="Create Payroll Level">
        <make-value entity-name="PayrollLevel" value-field="newEntity"/>
         <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.levelId">
            <sequenced-id sequence-name="PayrollLevel" field="newEntity.levelId"/>
        </if-empty>
        <field-to-result field="newEntity.levelId" result-name="levelId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="deletePayrollLevel" short-description="Delete Payroll Level">
        <entity-one entity-name="PayrollLevel" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="updateTerminationReason" short-description="Update Termination Reason">
        <entity-one entity-name="TerminationReason" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteTerminationReason" short-description="Delete Termination Reason">
        <entity-one entity-name="TerminationReason" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createUnemploymentClaim" short-description="Create a Unemployment Claim">
        <make-value entity-name="UnemploymentClaim" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="UnemploymentClaim" field="newEntity.unemploymentClaimId"/>
        <field-to-result field="newEntity.unemploymentClaimId" result-name="unemploymentClaimId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateUnemploymentClaim" short-description="Update Unemployment Claim">
        <entity-one entity-name="UnemploymentClaim" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteUnemploymentClaim" short-description="Delete Unemployment Claim">
        <now-timestamp field="nowTimeStamp"/>
        <entity-one entity-name="UnemploymentClaim" value-field="lookedUpValue"/>
        <set field="lookedUpValue.thruDate" from-field="nowTimeStamp"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <!-- Employee Position Group -->
    <simple-method method-name="createEmplPosition" short-description="Create a Employee Position">
        <make-value entity-name="EmplPosition" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="EmplPosition" field="newEntity.emplPositionId"/>
        <field-to-result field="newEntity.emplPositionId" result-name="emplPositionId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateEmplPosition" short-description="Update Employee Position">
        <entity-one entity-name="EmplPosition" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmplPosition" short-description="Delete Employee Position">
        <entity-one entity-name="EmplPosition" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createEmplPositionFulfillment" short-description="Create a Emplyoee Position Fulfillment">
        <make-value entity-name="EmplPositionFulfillment" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateEmplPositionFulfillment" short-description="Update Employee Position Fulfillment">
        <entity-one entity-name="EmplPositionFulfillment" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmplPositionFulfillment" short-description="Delete Employee Position Fulfillment">
        <entity-one entity-name="EmplPositionFulfillment" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createEmplPositionReportingStruct" short-description="Create a Employee Position Reporting Structure">
        <make-value entity-name="EmplPositionReportingStruct" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <if>
            <condition>
                <if-compare-field field="parameters.emplPositionIdManagedBy" to-field="parameters.emplPositionIdReportingTo" operator="not-equals"/>
            </condition>
            <then>
                <create-value value-field="newEntity"/>
            </then>
            <else>
                <add-error>
                    <fail-property property="HumanResEmplPostitionIdReportingToAndEmplPositionIdManagedByMustBeDiff" resource="HumanResUiLabels"/>
                </add-error>
                <check-errors/>
            </else>
        </if>
    </simple-method>

    <simple-method method-name="updateEmplPositionReportingStruct" short-description="Update Employee Position Reporting Structure">
        <entity-one entity-name="EmplPositionReportingStruct" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmplPositionReportingStruct" short-description="Delete Employee Position Reporting Structure">
        <entity-one entity-name="EmplPositionReportingStruct" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createEmplPositionResponsibility" short-description="Create a Employee Position Responsibility">
        <make-value entity-name="EmplPositionResponsibility" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateEmplPositionResponsibility" short-description="Update Employee Position Responsibility">
        <entity-one entity-name="EmplPositionResponsibility" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmplPositionResponsibility" short-description="Delete Employee Position Responsibility">
        <entity-one entity-name="EmplPositionResponsibility" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createValidResponsibility" short-description="Create a Valid Responsibility">
        <make-value entity-name="ValidResponsibility" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateValidResponsibility" short-description="Update Valid Responsibility">
        <entity-one entity-name="ValidResponsibility" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteValidResponsibility" short-description="Delete Valid Responsibility">
        <entity-one entity-name="ValidResponsibility" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <!-- Skill Types -->
    <simple-method method-name="createSkillType" short-description="Create a SkillType">
        <make-value entity-name="SkillType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.skillTypeId">
            <sequenced-id sequence-name="SkillType" field="newEntity.skillTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.skillTypeId" result-name="skillTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateSkillType" short-description="Update SkillType">
        <entity-one entity-name="SkillType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteSkillType" short-description="Delete SkillType">
        <entity-one entity-name="SkillType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createEmployee" short-description="Create New Employee">
        <set field="parameters.roleTypeId" value="EMPLOYEE"/>
        <call-simple-method method-name="createPersonRoleAndContactMechs" xml-resource="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml"/>
        <if-not-empty field="parameters.partyIdFrom">
            <set field="partyRelationshipCtx.partyId" from-field="partyId"/>
            <set field="partyRelationshipCtx.partyIdFrom" from-field="parameters.partyIdFrom"/>
            <set field="partyRelationshipCtx.partyIdTo" from-field="partyId"/>
            <set field="partyRelationshipCtx.roleTypeIdFrom" value="INTERNAL_ORGANIZATIO"/>
            <set field="partyRelationshipCtx.roleTypeIdTo" value="EMPLOYEE"/>
            <set field="partyRelationshipCtx.relationshipName" value="EMPLOYMENT"/>
            <set field="partyRelationshipCtx.fromDate" from-field="parameters.fromDate"/>
            <now-timestamp field="nowTimestamp"/>
            <if-empty field="partyRelationshipCtx.fromDate">
                <set field="partyRelationshipCtx.fromDate" from-field="nowTimestamp"/>
            </if-empty>
            <call-service service-name="createPartyRelationship" in-map-name="partyRelationshipCtx"/>
        </if-not-empty>
        <field-to-result field="partyId"/>
    </simple-method>

    <!-- Responsibility Types -->
    <simple-method method-name="createResponsibilityType" short-description="Create a ResponsibilityType">
        <make-value entity-name="ResponsibilityType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.responsibilityTypeId">
            <sequenced-id sequence-name="ResponsibilityType" field="newEntity.responsibilityTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.responsibilityTypeId" result-name="responsibilityTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateResponsibilityType" short-description="Update ResponsibilityType">
        <entity-one entity-name="ResponsibilityType" value-field="lookedUpValue"/>
        <set-nonpk-fields  map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteResponsibilityType" short-description="Delete ResponsibilityType">
        <entity-one entity-name="ResponsibilityType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createTerminationType" short-description="Create a TerminationType">
        <make-value entity-name="TerminationType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.terminationTypeId">
            <sequenced-id sequence-name="TerminationType" field="newEntity.terminationTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.terminationTypeId" result-name="terminationTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateTerminationType" short-description="Update TerminationType">
        <entity-one entity-name="TerminationType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteTerminationType" short-description="Delete TerminationType">
        <entity-one entity-name="TerminationType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createEmplPositionType" short-description="Create a PositionType">
        <make-value entity-name="EmplPositionType" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.emplPositionTypeId">
            <sequenced-id sequence-name="EmplPositionType" field="newEntity.emplPositionTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.emplPositionTypeId" result-name="emplPositionTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateEmplPositionType" short-description="Update PositionType">
        <entity-one entity-name="EmplPositionType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteEmplPositionType" short-description="Delete EmplPositionType">
        <entity-one entity-name="EmplPositionType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="updateEmplPositionTypeRate" short-description="Update/create EmplPositionTypeRate">
        <entity-one entity-name="EmplPositionTypeRate" value-field="lookedUpValue"/>
        <!-- check if already exist is so expire current record -->
        <entity-and entity-name="EmplPositionTypeRate" list="emplPositionTypeRates" filter-by-date="true">
            <field-map field-name="emplPositionTypeId" from-field="parameters.emplPositionTypeId"/>
            <field-map field-name="rateTypeId" from-field="parameters.rateTypeId"/>
        </entity-and>
        <if-not-empty field="emplPositionTypeRates">
            <first-from-list entry="emplPositionTypeRate" list="emplPositionTypeRates"/>
            <now-timestamp field="emplPositionTypeRate.thruDate"/>
            <store-value value-field="emplPositionTypeRate"/>
        </if-not-empty>

        <make-value value-field="newEntity" entity-name="EmplPositionTypeRate"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate"><now-timestamp field="newEntity.fromDate"/></if-empty>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>

        <if-not-empty field="parameters.rateAmount">
            <set-service-fields service-name="updateRateAmount" map="parameters" to-map="updRate"/>
            <call-service service-name="updateRateAmount" in-map-name="updRate"/>
        </if-not-empty>
    </simple-method>

    <simple-method method-name="deleteEmplPositionTypeRate" short-description="Delete EmplPositionTypeRate">
        <entity-one entity-name="EmplPositionTypeRate" value-field="lookedUpValue"/>
        <now-timestamp field="lookedUpValue.thruDate"/>
        <store-value value-field="lookedUpValue"/>

        <set-service-fields service-name="deleteRateAmount" map="parameters" to-map="delRateAmount"/>
        <set field="delRateAmount.fromDate" from-field="parameters.rateAmountFromDate"/>
        <call-service service-name="deleteRateAmount" in-map-name="delRateAmount"/>
    </simple-method>

    <simple-method method-name="createAgreementEmploymentAppl" short-description="Create Agreement Employment Appl">
        <make-value entity-name="AgreementEmploymentAppl" value-field="agreementEmploymentAppl"/>
        <set-pk-fields value-field="agreementEmploymentAppl" map="parameters"/>
        <set-nonpk-fields value-field="agreementEmploymentAppl" map="parameters"/>
        <create-value value-field="agreementEmploymentAppl"/>
        <check-errors/>
    </simple-method>

    <simple-method method-name="updateAgreementEmploymentAppl" short-description="update an Agreement Employment Appl">
        <entity-one entity-name="AgreementEmploymentAppl" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteAgreementEmploymentAppl" short-description="Delete Agreement Employment Appl">
        <entity-one entity-name="AgreementEmploymentAppl" value-field="agreementEmploymentAppl"/>
        <remove-value value-field="agreementEmploymentAppl"/>
    </simple-method>
    
    <simple-method method-name="createEmplLeave" short-description="Create Employee Leave" login-required="false">        
        <entity-and list="emplLeaves" entity-name="EmplLeave">            
            <field-map field-name="partyId" from-field="parameters.partyId"/>            
            <field-map field-name="fromDate" from-field="parameters.fromDate"/>
            <field-map field-name="leaveTypeId" from-field="parameters.leaveTypeId"/>
            <field-map field-name="leaveStatus" value="LEAVE_CREATED"/>
        </entity-and>
        
		<entity-and list="customTimePeriodIdList" entity-name="CustomTimePeriod">
					<field-map field-name="periodTypeId" value="FISCAL_YEAR"/>
					<field-map field-name="isClosed" value="N"/>
		</entity-and>
		 
		 
    	
		  
		   <if-not-empty field="customTimePeriodIdList">   
		        
		        <if-empty field="emplLeaves">                            
		     		<make-value entity-name="EmplLeave" value-field="newEntity"/>
		        	<set-pk-fields value-field="newEntity" map="parameters"/>
		        	<set-nonpk-fields value-field="newEntity" map="parameters"/>
		        	<set field="newEntity.customTimePeriodId" value="${customTimePeriodIdList[0].customTimePeriodId}"/>
		        	<create-value value-field="newEntity"/>
		        <check-errors/>
		        <property-to-field resource="HumanResUiLabels" property="HumanResLeaveCreationSuccess" field="successMessage"/>
		        <field-to-result field="responseMessage" result-name="successMessage"/>                     
		            <else>
		                <add-error><fail-message message="Sorry! You Have Already Applied For This Date."/></add-error>
		                <check-errors/>
		            </else>
		        </if-empty>
		      
   		  <else>
              <add-error><fail-message message="There have no current fiscal year. Please ask admin to add fiscal year"/></add-error>
              <check-errors/>
          </else>
        </if-not-empty>
        
        
    </simple-method>

    <simple-method method-name="updateEmplLeave" short-description="Update Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmplLeave" short-description="Delete Employee Leave">
        <entity-one entity-name="EmplLeave" value-field="emplLeave"/>
        <remove-value value-field="emplLeave"/>
    </simple-method>

    <simple-method method-name="createEmplLeaveType" short-description="Create a LeaveType">
        <make-value entity-name="EmplLeaveType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.leaveTypeId">
            <sequenced-id sequence-name="EmplLeaveType" field="newEntity.leaveTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.leaveTypeId" result-name="leaveTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateEmplLeaveType" short-description="Update leaveType">
        <entity-one entity-name="EmplLeaveType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="deleteEmplLeaveType" short-description="Delete leaveType">
        <entity-one entity-name="EmplLeaveType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="updatePayrollLevel" short-description="Update leaveType">
        <entity-one entity-name="PayrollLevel" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
     <simple-method method-name="getCurrentPartyEmploymentData" short-description="Get all current employment information for a certain partyId">
        <!-- party benefit -->
        <entity-and entity-name="BenefitTypeAndParty" list="partyBenefitTypes" filter-by-date="true">
            <field-map field-name="partyIdTo" from-field="parameters.partyId"/>
        </entity-and>
        <field-to-result field="partyBenefitTypes"/>
        <!-- employment -->
        <entity-and entity-name="Employment" list="employments" filter-by-date="true">
            <field-map field-name="partyIdTo" from-field="parameters.partyId"/>
        </entity-and>
        <first-from-list entry="employment" list="employments"/>
        <field-to-result field="employment"/>
        <!-- position -->
        <entity-and entity-name="EmplPositionAndFulfillment" list="emplPositionAndFulfillments" filter-by-date="true">
            <field-map field-name="employeePartyId" from-field="parameters.partyId"/>
            <!-- <field-map field-name="partyId" from-field="employment.partyIdFrom"/>  -->
        </entity-and>
        <first-from-list entry="emplPositionAndFulfillment" list="emplPositionAndFulfillments"/>
        <field-to-result field="emplPositionAndFulfillment" result-name="emplPosition"/>
        <!-- position type -->
        <if-not-empty field="emplPositionAndFulfillment">
            <get-related-one value-field="emplPositionAndFulfillment" relation-name="EmplPositionType" to-value-field="emplPositionType"/>
            <field-to-result field="emplPositionType"/>
        </if-not-empty>
        <!-- rate amount -->
        <entity-one entity-name="PartyAcctgPreference" value-field="partyAcctgPreference">
            <field-map field-name="partyId" from-field="employment.partyIdFrom"/>
        </entity-one>
        <entity-and entity-name="RateAmount" list="rateAmounts" filter-by-date="true">
            <field-map field-name="emplPositionTypeId" from-field="emplPositionType.emplPositionTypeId"/>
            <field-map field-name="rateCurrencyUomId" from-field="partyAcctgPreference.baseCurrencyUomId"/>
        </entity-and>
        <first-from-list entry="rateAmount" list="rateAmounts"/>
        <field-to-result field="rateAmount" result-name="emplPositionRateAmount"/>
    </simple-method>
    
    <simple-method method-name="createJobRequisition" short-description="Create Job Requisition">
        <make-value entity-name="JobRequisition" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="JobRequisition" field="newEntity.jobRequisitionId"/>
        <field-to-result field="newEntity.jobRequisitionId" result-name="jobRequisitionId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateJobRequisition" short-description="Update Job Requisition">
        <entity-one entity-name="JobRequisition" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteJobRequisition" short-description="Delete Job Requisition">
        <entity-one entity-name="JobRequisition" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="createContessaJobRequisition" short-description="Create Job Requisition">
        <make-value entity-name="ContessaJobRequisition" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
       
        <sequenced-id sequence-name="ContessaJobRequisition" field="newEntity.jobRequisitionId"/>
         <set field="newEntity.requisitionStatus" value="JOB_REQ_CREATED"/>
         <if-empty field="newEntity.jobRequisitionDate">
            <now-timestamp field="nowTimestamp"/>
            <set from-field="nowTimestamp" field="newEntity.jobRequisitionDate"/>
        </if-empty>
        <field-to-result field="newEntity.jobRequisitionId" result-name="jobRequisitionId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateContessaJobRequisition" short-description="Update Job Requisition">
        <entity-one entity-name="ContessaJobRequisition" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteContessaJobRequisition" short-description="Delete Job Requisition">
        <entity-one entity-name="ContessaJobRequisition" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="createInternalJobPosting" short-description="Create Internal Job Posting">
        <make-value entity-name="EmploymentApp" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="EmploymentApp" field="newEntity.applicationId"/>
        <field-to-result field="newEntity.applicationId" result-name="applicationId"/>
        <if-empty field="newEntity.applicationDate">
            <now-timestamp field="nowTimestamp"/>
            <set from-field="nowTimestamp" field="newEntity.applicationDate"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateInternalJobPosting" short-description="Update Internal Job Posting">
        <entity-one entity-name="EmploymentApp" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteInternalJobPosting" short-description="Delete Internal Job Posting">
        <entity-one entity-name="EmploymentApp" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="createJobInterview" short-description="Create Job Interview">
        <make-value entity-name="JobInterview" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <sequenced-id sequence-name="JobInterview" field="newEntity.jobInterviewId"/>
        <field-to-result field="newEntity.jobInterviewId" result-name="jobInterviewId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateJobInterview" short-description="Update Job Interview">
        <entity-one entity-name="JobInterview" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteJobInterview" short-description="Delete Job Interview">
        <entity-one entity-name="JobInterview" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="createJobInterviewType" short-description="Create Job Interview Type">
        <make-value entity-name="JobInterviewType" value-field="newEntity" />
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="parameters.jobInterviewTypeId">
            <sequenced-id sequence-name="JobInterviewType" field="newEntity.jobInterviewTypeId"/>
        <else>
            <set from-field="parameters.jobInterviewTypeId" field="newEntity.jobInterviewTypeId"/>
        </else>
        </if-empty>
        <field-to-result field="newEntity.jobInterviewTypeId" result-name="jobInterviewTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateJobInterviewType" short-description="Update Interview Type">
        <entity-one entity-name="JobInterviewType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteJobInterviewType" short-description="Delete Interview Type">
        <entity-one entity-name="JobInterviewType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
        
    <simple-method method-name="updateApprovalStatus" short-description="Update Approval Status">
        <entity-one entity-name="EmploymentApp" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="updateTrainingStatus" short-description="Update Training Status">
        <entity-one entity-name="PersonTraining" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="applyTraining" short-description="Apply Training">
        <make-value entity-name="TrainingRequest" value-field="trainingRequest"/>
        <make-next-seq-id value-field="trainingRequest" seq-field-name="trainingRequestId"/>
        <create-value value-field="trainingRequest"/>
        <make-value entity-name="PersonTraining" value-field="personTraining"/>
        <set-pk-fields map="parameters" value-field="personTraining"/>
        <set-nonpk-fields map="parameters" value-field="personTraining"/>
        <set from-field="trainingRequest.trainingRequestId" field="personTraining.trainingRequestId"/>
        <set field="personTraining.fromDate" from-field="parameters.fromDate"/>
        <set field="personTraining.thruDate" from-field="parameters.thruDate"/>
        <set field="personTraining.trainingClassTypeId" from-field="parameters.workEffortName"/>
        <create-value value-field="personTraining"/>
        <check-errors/>
    </simple-method>
   <!--  <simple-method method-name="assignTraining" short-description="Assign Training">
        <make-value entity-name="TrainingRequest" value-field="trainingRequest"/>
        <make-next-seq-id value-field="trainingRequest" seq-field-name="trainingRequestId"/>
        <create-value value-field="trainingRequest"/>
        <make-value entity-name="PersonTraining" value-field="personTraining"/>
        <set-pk-fields map="parameters" value-field="personTraining"/>
        <set-nonpk-fields map="parameters" value-field="personTraining"/>
        <set from-field="trainingRequest.trainingRequestId" field="personTraining.trainingRequestId"/>
        <set field="personTraining.fromDate" from-field="parameters.fromDate"/>
        <set field="personTraining.thruDate" from-field="parameters.thruDate"/>
        <create-value value-field="personTraining"/>
        <check-errors/>
    </simple-method> -->
     <simple-method method-name="assignTraining" short-description="Assign Training">
    		<call-service service-name="getPartyIdfromEmplBack" in-map-name="parameters">
                        <result-to-field result-name="partyId" field="parameters.partyId"/>
           </call-service>
    	 
        <make-value entity-name="TrainingRequest" value-field="trainingRequest"/>
        <make-next-seq-id value-field="trainingRequest" seq-field-name="trainingRequestId"/>
        <create-value value-field="trainingRequest"/>
        <make-value entity-name="PersonTraining" value-field="personTraining"/>
        <set-pk-fields map="parameters" value-field="personTraining"/>
        <set-nonpk-fields map="parameters" value-field="personTraining"/>
       <!-- <set field="partyId" field="assigntraining.partyId"/ --> 
        
        <set from-field="trainingRequest.trainingRequestId" field="personTraining.trainingRequestId"/>
        <set field="personTraining.fromDate" from-field="parameters.fromDate"/>
        <set field="personTraining.thruDate" from-field="parameters.thruDate"/>
         <set field="personTraining.partyId" from-field="parameters.partyId"/>
        <create-value value-field="personTraining"/>
        <check-errors/>
    </simple-method>
    
    
    <simple-method method-name="createTrainingTypes" short-description="Create Training Types">
        <make-value entity-name="TrainingClassType" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateTrainingTypes" short-description="Update Training Types">
        <entity-one entity-name="TrainingClassType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteTrainingTypes" short-description="Delete Training Types">
        <entity-one entity-name="TrainingClassType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="createEmplLeaveReasonType" short-description="Create a Leave Reason Type">
        <make-value entity-name="EmplLeaveReasonType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.emplLeaveReasonTypeId">
            <sequenced-id sequence-name="EmplLeaveReasonType" field="newEntity.emplLeaveReasonTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.emplLeaveReasonTypeId" result-name="emplLeaveReasonTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateEmplLeaveReasonType" short-description="Update leave Reason Type">
        <entity-one entity-name="EmplLeaveReasonType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="deleteEmplLeaveReasonType" short-description="Delete leave Reason Type">
        <entity-one entity-name="EmplLeaveReasonType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    
    <simple-method method-name="updateEmplLeaveStatus" short-description="Update Leave Approval Status">
        <entity-one entity-name="EmplLeave" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    
    
    
    <simple-method method-name="createLogisticsItemType" short-description="Create a LogisticsItemType">
        <make-value entity-name="LogisticsItemType" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.logisticsItemTypeId">
            <sequenced-id sequence-name="LogisticsItemType" field="newEntity.logisticsItemTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.logisticsItemTypeId" result-name="logisticsItemTypeId"/>
        <create-value value-field="newEntity"/>
    </simple-method>

    <simple-method method-name="updateLogisticsItemType" short-description="Update LogisticsItemType">
        <entity-one entity-name="LogisticsItemType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>

    
    <simple-method method-name="deleteLogisticsItemType" short-description="Delete LogisticsItemType">
        <entity-one entity-name="LogisticsItemType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteLogisticSupport" short-description="Delete LogisticsItem">
        <entity-one entity-name="LogisticsItem" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    

    
    <!-- ==================================Prof Qual Type ====================================-->
 
    <simple-method method-name="deletePartyQualType" short-description="Delete PartyQualType">
        <entity-one entity-name="PartyQualType" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
     <simple-method method-name="updatePartyQualType" short-description="Update LogisticsItemType">
        <entity-one entity-name="PartyQualType" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <!-- ======================================End================================================  -->
    
    <!-- Party Logistics -->
    <simple-method method-name="createLogisticsRequisition" short-description="Create Logistics Requisition">
        <make-value entity-name="LogisticsRequisition" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <field-to-result field="newEntity.requisitionId" result-name="requisitionId"/>
        <field-to-result field="newEntity.partyId" result-name="partyId"/>
        <field-to-result field="newEntity.requisitionDate" result-name="requisitionDate"/>
        <create-value value-field="newEntity"/>
    </simple-method>

   
     <simple-method method-name="updateLogisticsRequisition" short-description="Update Logistics Requisition">
        <entity-one entity-name="LogisticsItem" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Logistics Requisition Successfully Updated"/>
    </simple-method>

    <simple-method method-name="deleteLogisticsRequisition" short-description="Delete Logistics Requisition">
        <entity-one entity-name="LogisticsItem" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Logistics Requisition Successfully Deleted"/>
    </simple-method>
    
    
    
    <!-- ========================Previous Employment History===================== -->
    
     <simple-method method-name="updatePreviousEmploymentHistory" short-description="Update Previous Employment History">
        <entity-one entity-name="PrevEmployment" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Previous Employment History Successfully Updated"/>
    </simple-method>
    <simple-method method-name="deletePreviousEmploymentHistory" short-description="Delete Previous Employment History">
        <entity-one entity-name="PrevEmployment" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <set field="successMessage" value="Previous Employment History Successfully Deleted"/>
    </simple-method>
    
    <!-- ================================End====================================== -->
<!--  Organization service-->
<simple-method method-name="createDivisions" short-description="Create a Party Divisions">
        <make-value entity-name="Party" value-field="newEntity1"/>
        <set-pk-fields map="parameters" value-field="newEntity1"/>
        <set-nonpk-fields map="parameters" value-field="newEntity1"/>
        
        <sequenced-id sequence-name="Party" field="newEntity1.partyId"/>
        
        <!-- <set field="newEntity1.partyId" value="${parameters.orgPartyId}${parameters.partyId}"/> -->
        <set field="newEntity1.partyTypeId" value="PARTY_DIVISION"/>
        
        <create-value value-field="newEntity1"/>
        
        <make-value entity-name="PartyGroup" value-field="newEntity2"/>
        <set-pk-fields map="parameters" value-field="newEntity2"/>
        <set-nonpk-fields map="parameters" value-field="newEntity2"/>
        <set field="newEntity2.partyId" value="${newEntity1.partyId}"/>
        <set field="newEntity2.groupName" from-field="parameters.groupName"/>
        
        
        <create-value value-field="newEntity2"/>
        
        <make-value entity-name="PartyRole" value-field="newEntity3"/>
        <set-pk-fields map="parameters" value-field="newEntity3"/>
        <set-nonpk-fields map="parameters" value-field="newEntity3"/>
        <set field="newEntity3.partyId" value="${newEntity1.partyId}"/>
        <set field="newEntity3.roleTypeId" value="DIVISION"/>
        
        <create-value value-field="newEntity3"/>
        
        <make-value entity-name="PartyRelationship" value-field="newEntity4"/>
        <set-pk-fields map="parameters" value-field="newEntity4"/>
        <set-nonpk-fields map="parameters" value-field="newEntity4"/>
        <set field="newEntity4.partyIdFrom" from-field="parameters.orgPartyId"/>
		<!--  <set field="newEntity4.partyIdFrom" value="BGL"/> -->
        <set field="newEntity4.partyIdTo" value="${newEntity1.partyId}"/>
        <set field="newEntity4.partyRelationshipTypeId" value="GROUP_ROLLUP"/>
        <set field="newEntity4.roleTypeIdFrom" value="INTERNAL_ORGANIZATIO"/>
        <set field="newEntity4.roleTypeIdTo" from-field="newEntity3.roleTypeId"/>
        <if-empty field="newEntity4.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity4.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        
        <create-value value-field="newEntity4"/>
        
        <set field="successMessage" value="Division Added Successfully"/>
    </simple-method>
    
    <simple-method method-name="createDepartments" short-description="Create a Party Department">
        
        <make-value entity-name="Party" value-field="newEntity1"/>
        <set-pk-fields map="parameters" value-field="newEntity1"/>
        <set-nonpk-fields map="parameters" value-field="newEntity1"/>
        
         <sequenced-id sequence-name="Party" field="newEntity1.partyId"/>
         
       <!--  <set field="newEntity1.partyId"  value="${parameters.orgPartyId}${parameters.partyId}"/> -->
        <set field="newEntity1.partyTypeId" value="PARTY_DEPARTMENT"/>
        
        <create-value value-field="newEntity1"/>
        
        <make-value entity-name="PartyGroup" value-field="newEntity2"/>
        <set-pk-fields map="parameters" value-field="newEntity2"/>
        <set-nonpk-fields map="parameters" value-field="newEntity2"/>
        <set field="newEntity2.partyId"  from-field="newEntity1.partyId"/>
        <set field="newEntity2.groupName" from-field="parameters.groupName"/>
      
        
        <create-value value-field="newEntity2"/>
        
        <make-value entity-name="PartyRole" value-field="newEntity3"/>
        <set-pk-fields map="parameters" value-field="newEntity3"/>
        <set-nonpk-fields map="parameters" value-field="newEntity3"/>
        <set field="newEntity3.partyId" from-field="newEntity1.partyId"/>
        <set field="newEntity3.roleTypeId" value="DEPARTMENT"/>
        
        <create-value value-field="newEntity3"/>
        
        <make-value entity-name="PartyRelationship" value-field="newEntity4"/>
        <set-pk-fields map="parameters" value-field="newEntity4"/>
        <set-nonpk-fields map="parameters" value-field="newEntity4"/>
        <set field="newEntity4.partyIdFrom" from-field="parameters.orgPartyId"/>
        <set field="newEntity4.partyIdTo"  from-field="newEntity1.partyId"/>
        <set field="newEntity4.partyRelationshipTypeId" value="GROUP_ROLLUP"/>
        <set field="newEntity4.roleTypeIdFrom" value="DIVISION"/>
        <set field="newEntity4.roleTypeIdTo" from-field="newEntity3.roleTypeId"/>
        <if-empty field="newEntity4.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity4.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        
        <create-value value-field="newEntity4"/>
        
        <set field="successMessage" value="Department Added Successfully"/>
    </simple-method>
    
    <!-- Section creation for HR Admin for organization Division-->
    <simple-method method-name="createSection" short-description="Create a Party Section">
        
        <make-value entity-name="Party" value-field="newEntity1"/>
        <set-pk-fields map="parameters" value-field="newEntity1"/>
        <set-nonpk-fields map="parameters" value-field="newEntity1"/>
        <sequenced-id sequence-name="Party" field="newEntity1.partyId"/>
        <!-- <set field="newEntity1.partyId"  value="${parameters.orgPartyId}${parameters.partyId}"/> -->
        <set field="newEntity1.partyTypeId" value="PARTY_SECTION"/>
        
        <create-value value-field="newEntity1"/>
        
        <make-value entity-name="PartyGroup" value-field="newEntity2"/>
        <set-pk-fields map="parameters" value-field="newEntity2"/>
        <set-nonpk-fields map="parameters" value-field="newEntity2"/>
        <set field="newEntity2.partyId"  from-field="newEntity1.partyId"/>
        <set field="newEntity2.groupName" from-field="parameters.groupName"/>
       
        
        <create-value value-field="newEntity2"/>
        
        <make-value entity-name="PartyRole" value-field="newEntity3"/>
        <set-pk-fields map="parameters" value-field="newEntity3"/>
        <set-nonpk-fields map="parameters" value-field="newEntity3"/>
        <set field="newEntity3.partyId"  from-field="newEntity1.partyId"/>
        <set field="newEntity3.roleTypeId" value="SECTION"/>
        
        <create-value value-field="newEntity3"/>
        
        <make-value entity-name="PartyRelationship" value-field="newEntity4"/>
        <set-pk-fields map="parameters" value-field="newEntity4"/>
        <set-nonpk-fields map="parameters" value-field="newEntity4"/>
        <set field="newEntity4.partyIdFrom" from-field="parameters.orgPartyId"/>
        <set field="newEntity4.partyIdTo"  from-field="newEntity1.partyId"/>
        <set field="newEntity4.partyRelationshipTypeId" value="GROUP_ROLLUP"/>
        <set field="newEntity4.roleTypeIdFrom" value="DEPARTMENT"/>
        <set field="newEntity4.roleTypeIdTo" from-field="newEntity3.roleTypeId"/>
        <if-empty field="newEntity4.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity4.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        
        <create-value value-field="newEntity4"/>
        
        <set field="successMessage" value="Section Added Successfully"/>
    </simple-method>
    
    <!-- Line creation for HR Admin for organization Division-->
    <simple-method method-name="createUnit" short-description="Create a Party Unit">
        
        <make-value entity-name="Party" value-field="newEntity1"/>
        <set-pk-fields map="parameters" value-field="newEntity1"/>
        <set-nonpk-fields map="parameters" value-field="newEntity1"/>
        
         <sequenced-id sequence-name="Party" field="newEntity1.partyId"/>
        <!-- <set field="newEntity1.partyId"  value="${parameters.orgPartyId}${parameters.partyId}"/> -->
        <set field="newEntity1.partyTypeId" value="PARTY_UNIT"/>
        
        <create-value value-field="newEntity1"/>
        
        <make-value entity-name="PartyGroup" value-field="newEntity2"/>
        <set-pk-fields map="parameters" value-field="newEntity2"/>
        <set-nonpk-fields map="parameters" value-field="newEntity2"/>
        <set field="newEntity2.partyId"  from-field="newEntity1.partyId"/>
        <set field="newEntity2.groupName" from-field="parameters.groupName"/>
       
        <create-value value-field="newEntity2"/>
        
        <make-value entity-name="PartyRole" value-field="newEntity3"/>
        <set-pk-fields map="parameters" value-field="newEntity3"/>
        <set-nonpk-fields map="parameters" value-field="newEntity3"/>
        <set field="newEntity3.partyId"  from-field="newEntity1.partyId"/>
        <set field="newEntity3.roleTypeId" value="UNIT"/>
        
        <create-value value-field="newEntity3"/>
        
        <make-value entity-name="PartyRelationship" value-field="newEntity4"/>
        <set-pk-fields map="parameters" value-field="newEntity4"/>
        <set-nonpk-fields map="parameters" value-field="newEntity4"/>
        <set field="newEntity4.partyIdFrom" from-field="parameters.orgPartyId"/>
        <set field="newEntity4.partyIdTo"  from-field="newEntity1.partyId"/>
        <set field="newEntity4.partyRelationshipTypeId" value="GROUP_ROLLUP"/>
        <set field="newEntity4.roleTypeIdFrom" value="SECTION"/>
        <set field="newEntity4.roleTypeIdTo" from-field="newEntity3.roleTypeId"/>
        <if-empty field="newEntity4.fromDate">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity4.fromDate" from-field="nowTimeStamp"/>
        </if-empty>
        
        <create-value value-field="newEntity4"/>
        
        <set field="successMessage" value="Unit Added Successfully"/>
    </simple-method>
    
    
    <simple-method method-name="calculateLeaveWithoutHoliday" short-description="Get the holidays list by company">
      <!-- This is working fine -->
        <entity-and entity-name="WorkEffort" list="holidays">
             <field-map field-name="companyId" from-field="parameters.companyId"/>
             <order-by field-name="estimatedStartDate"/>
        </entity-and>		
      <field-to-result field="holidays"/>
    </simple-method>
    
        
    <!-- Add Organization Head -->
     <simple-method method-name="createOrganizationHead" short-description="Create OrganizationHead">
        <make-value entity-name="BusinessUnitTopAssign" value-field="newEntity" />
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    
    <simple-method method-name="updateOrganizationHead" short-description="Update OrganizationHead">
        <entity-one entity-name="BusinessUnitTopAssign" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>    
 
    <simple-method method-name="deleteOrganizationHead" short-description="Delete OrganizationHead">
        <entity-one entity-name="BusinessUnitTopAssign" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
   </simple-method>
    <simple-method method-name="updateSuperiorSetting" short-description="Update Employment">
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" from-field="parameters.attendanceSuperiorId"/>
        </entity-one>        
        <set field="parameters.attendanceSuperiorId" from-field="userLogin.partyId"/>
        <entity-one entity-name="Person" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
        <set field="partyId" from-field="parameters.partyId"/>
        <field-to-result field="partyId" result-name="partyId"/>
    </simple-method>
    
    <simple-method method-name="updateYearlyKPITargetLocker" short-description="Update">
        <entity-one entity-name="YearlyKPITargetLocker" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="saveAttendaceInput" short-description="Create">
        <entity-one entity-name="DailyAttendance"/>
        <set field="partyId" from-field="parameters.partyId"/>
        <!-- <set-nonpk-fields value-field="lookedUpValue" map="parameters"/> -->
        <!-- <store-value value-field="lookedUpValue"/> -->
    </simple-method>
    <simple-method method-name="saveAttendaceInput" short-description="Create">
        <make-value entity-name="DailyAttendance" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <set field="newEntity.processStatus" value="Data Loaded"></set>
        <if-empty field="newEntity.dateAdded">
            <now-timestamp field="nowTimeStamp"/>
            <set field="newEntity.dateAdded" from-field="nowTimeStamp"/>
        </if-empty>
        <create-value value-field="newEntity"/>
        <set field="partyId" from-field="parameters.partyId"/>
        <set field="employeeId" from-field="parameters.employeeId"/>
        <field-to-result field="partyId" result-name="partyId"/>
        <set field="successMessage" value="Attendance Successfully Saved"/>
    </simple-method>
   
</simple-methods>
